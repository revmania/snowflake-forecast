
CREATE OR REPLACE WAREHOUSE EXPENSIVE_SNOWPARK_WH
WITH WAREHOUSE_SIZE = 'MEDIUM'
  WAREHOUSE_TYPE = 'SNOWPARK-OPTIMIZED'
  INITIALLY_SUSPENDED = TRUE
  AUTO_RESUME = TRUE
  AUTO_SUSPEND = 2
  ;

USE WAREHOUSE EXPENSIVE_SNOWPARK_WH;
USE SCHEMA DATABASENAME.SCHEMANAME;

/*** GET ACCESS TO DATA SET FROM NYC TLC IN AWS S3 HERE      ***/
/*** https://registry.opendata.aws/nyc-tlc-trip-records-pds/ ***/

--DROP TABLE TAXI.NYCTLC_FHVHV_DAY;
CREATE TABLE NYCTLC_FHVHV_DAY AS SELECT 
	    TIME_SLICE("pickup_datetime", 1, 'DAY')::TIMESTAMP_NTZ as "PICKUP_DAY"	
      , SUM("driver_pay") as "DRIVER_PAY_SUM"
FROM DSI.NYCTLC_FHVHV
WHERE "pickup_datetime" > '2020-03-20 00:00:000'
GROUP BY TIME_SLICE("pickup_datetime", 1, 'DAY')::TIMESTAMP_NTZ
ORDER BY 1 ASC;
/*
SELECT * FROM NYCTLC_FHVHV_DAY LIMIT 100;
SELECT COUNT("DRIVER_PAY_SUM") FROM NYCTLC_FHVHV_DAY;
*/

--DROP TABLE TAXI.NYCTLC_FHVHV_FOURHOUR;
CREATE TABLE NYCTLC_FHVHV_FOURHOUR AS SELECT 
	    TIME_SLICE("pickup_datetime", 4, 'HOUR')::TIMESTAMP_NTZ as "PICKUP_FOURHOUR"	
      , SUM("driver_pay") as "DRIVER_PAY_SUM"
FROM DSI.NYCTLC_FHVHV
WHERE "pickup_datetime" > '2020-03-20 00:00:000'
GROUP BY TIME_SLICE("pickup_datetime", 4, 'HOUR')::TIMESTAMP_NTZ
ORDER BY 1 ASC;
/*
SELECT * FROM NYCTLC_FHVHV_FOURHOUR LIMIT 100;
SELECT COUNT("DRIVER_PAY_SUM") FROM NYCTLC_FHVHV_FOURHOUR;
*/

--DROP TABLE NYCTLC_FHVHV_QUARTER;
CREATE TABLE NYCTLC_FHVHV_QUARTER AS SELECT 
	    TIME_SLICE("pickup_datetime", 15, 'MINUTE')::TIMESTAMP_NTZ as "PICKUP_QUARTER"	
      , SUM("driver_pay") as "DRIVER_PAY_SUM"
FROM DSI.NYCTLC_FHVHV
WHERE "pickup_datetime" > '2020-03-20 00:00:000'
GROUP BY TIME_SLICE("pickup_datetime", 15, 'MINUTE')::TIMESTAMP_NTZ
ORDER BY 1 ASC;
/*
SELECT * FROM NYCTLC_FHVHV_QUARTER LIMIT 100;
SELECT COUNT("DRIVER_PAY_SUM") FROM NYCTLC_FHVHV_QUARTER;
*/

--DROP TABLE NYCTLC_FHVHV_MINUTE;
CREATE TABLE NYCTLC_FHVHV_MINUTE AS SELECT 
	    TIME_SLICE("pickup_datetime", 1, 'MINUTE')::TIMESTAMP_NTZ as "PICKUP_MINUTE"	
      , SUM("driver_pay") as "DRIVER_PAY_SUM"
FROM DSI.NYCTLC_FHVHV
WHERE "pickup_datetime" > '2020-03-20 00:00:000'
GROUP BY TIME_SLICE("pickup_datetime", 1, 'MINUTE')::TIMESTAMP_NTZ
ORDER BY 1 ASC;
/*
SELECT * FROM NYCTLC_FHVHV_MINUTE LIMIT 100;
SELECT COUNT("DRIVER_PAY_SUM") FROM NYCTLC_FHVHV_MINUTE;
*/

/*** TEST THAT THESE REFERENCES ARE RETURNING OBJECT ID'S ***/
SELECT SYSTEM$REFERENCE('TABLE', 'NYCTLC_FHVHV_DAY');
SELECT SYSTEM$REFERENCE('TABLE', 'NYCTLC_FHVHV_FOURHOUR');
SELECT SYSTEM$REFERENCE('TABLE', 'NYCTLC_FHVHV_QUARTER');
SELECT SYSTEM$REFERENCE('TABLE', 'NYCTLC_FHVHV_MINUTE');


CREATE OR REPLACE SNOWFLAKE.ML.FORECAST TAXI_FORECAST_DRIVERPAY_PERDAY (
    INPUT_DATA => SYSTEM$REFERENCE('TABLE', 'NYCTLC_FHVHV_DAY'),
    TIMESTAMP_COLNAME => 'PICKUP_DAY',
    TARGET_COLNAME => 'DRIVER_PAY_SUM');

CREATE OR REPLACE SNOWFLAKE.ML.FORECAST TAXI_FORECAST_DRIVERPAY_PERFOURHOUR (
    INPUT_DATA => SYSTEM$REFERENCE('TABLE', 'NYCTLC_FHVHV_FOURHOUR'),
    TIMESTAMP_COLNAME => 'PICKUP_FOURHOUR',
    TARGET_COLNAME => 'DRIVER_PAY_SUM');

CREATE OR REPLACE SNOWFLAKE.ML.FORECAST TAXI_FORECAST_DRIVERPAY_PERQUARTER (
    INPUT_DATA => SYSTEM$REFERENCE('TABLE', 'NYCTLC_FHVHV_QUARTER'),
    TIMESTAMP_COLNAME => 'PICKUP_QUARTER',
    TARGET_COLNAME => 'DRIVER_PAY_SUM');

CREATE OR REPLACE SNOWFLAKE.ML.FORECAST TAXI_FORECAST_DRIVERPAY_PERMINUTE (
    INPUT_DATA => SYSTEM$REFERENCE('TABLE', 'NYCTLC_FHVHV_MINUTE'),
    TIMESTAMP_COLNAME => 'PICKUP_MINUTE',
    TARGET_COLNAME => 'DRIVER_PAY_SUM');


CALL TAXI_FORECAST_DRIVERPAY_PERDAY!FORECAST(FORECASTING_PERIODS => 25);
CREATE OR REPLACE TABLE DRIVERPAY_PERDAY_PREDICTIONS AS (
    SELECT * FROM TABLE(RESULT_SCAN(-1)));
--SELECT * FROM DRIVERPAY_PERDAY_PREDICTIONS;

CALL TAXI_FORECAST_DRIVERPAY_PERFOURHOUR!FORECAST(FORECASTING_PERIODS => 150);
CREATE OR REPLACE TABLE DRIVERPAY_PERFOURHOUR_PREDICTIONS AS (
    SELECT * FROM TABLE(RESULT_SCAN(-1)));
--SELECT * FROM DRIVERPAY_PERFOURHOUR_PREDICTIONS;

CALL TAXI_FORECAST_DRIVERPAY_PERQUARTER!FORECAST(FORECASTING_PERIODS => 2400); -- CONFIG_OBJECT => {'prediction_interval': .25});
CREATE OR REPLACE TABLE DRIVERPAY_PERQUARTER_PREDICTIONS AS (
    SELECT * FROM TABLE(RESULT_SCAN(-1)));
--SELECT * FROM DRIVERPAY_PERQUARTER_PREDICTIONS;

CALL TAXI_FORECAST_DRIVERPAY_PERMINUTE!FORECAST(FORECASTING_PERIODS => 14400); -- CONFIG_OBJECT => {'prediction_interval': .5});
CREATE OR REPLACE TABLE DRIVERPAY_PERMINUTE_PREDICTIONS AS (
    SELECT * FROM TABLE(RESULT_SCAN(-1)));
--SELECT * FROM DRIVERPAY_PERMINUTE_PREDICTIONS;


--DROP VIEW TAXI_FORECAST_DRIVERPAY_MULTISLICE;
CREATE OR REPLACE VIEW TAXI_FORECAST_DRIVERPAY_MULTISLICE AS
SELECT
    "PICKUP_QUARTER"::TIMESTAMP_NTZ AS "TIMESLOT"
    , "DRIVER_PAY_SUM"
    , NULL AS FORECAST_DAY
    , NULL AS FORECAST_4H
    , NULL AS FORECAST_15M
FROM NYCTLC_FHVHV_QUARTER
WHERE
    "PICKUP_QUARTER"::TIMESTAMP_NTZ > '2022-01-01 00:00:00.000'
UNION
SELECT
    TIME_SLICE(DP15M."TS", 15, 'MINUTE')::TIMESTAMP_NTZ AS "TIMESLOT"
    , NULL AS "DRIVER_PAY_SUM"
    , SUM(DPPD.FORECAST)/96 AS FORECAST_DAY
    , SUM(DP4H.FORECAST)/16 AS FORECAST_4H
    , SUM(DP15M.FORECAST) AS FORECAST_15M
FROM DRIVERPAY_PERQUARTER_PREDICTIONS DP15M
LEFT OUTER JOIN DRIVERPAY_PERFOURHOUR_PREDICTIONS DP4H ON TIME_SLICE(DP15M."TS", 4, 'HOUR')::TIMESTAMP_NTZ = TIME_SLICE(DP4H."TS", 4, 'HOUR')::TIMESTAMP_NTZ
LEFT OUTER JOIN DRIVERPAY_PERDAY_PREDICTIONS DPPD ON DATE(DP15M."TS")::TIMESTAMP_NTZ = DPPD."TS"::TIMESTAMP_NTZ
    GROUP BY TIME_SLICE(DP15M."TS", 15, 'MINUTE')::TIMESTAMP_NTZ, TIME_SLICE(DP4H."TS", 15, 'MINUTE')::TIMESTAMP_NTZ, TIME_SLICE(DPPD."TS", 15, 'MINUTE')::TIMESTAMP_NTZ
;



CREATE OR REPLACE VIEW TAXI_FORECAST_DRIVERPAY_MINUTE AS
SELECT
    "PICKUP_MINUTE"::TIMESTAMP_NTZ AS "TIMESLOT"
    , "DRIVER_PAY_SUM"
    , NULL AS FORECAST_MINUTE
FROM NYCTLC_FHVHV_MINUTE
WHERE
    "PICKUP_MINUTE"::TIMESTAMP_NTZ > '2022-06-01 00:00:00.000'
UNION
SELECT
    TIME_SLICE(DPPM."TS", 1, 'MINUTE')::TIMESTAMP_NTZ AS "TIMESLOT"
    , NULL AS "DRIVER_PAY_SUM"
    , SUM(DPPM.FORECAST) AS FORECAST_FOURHOUR
FROM DRIVERPAY_PERMINUTE_PREDICTIONS DPPM
    GROUP BY TIME_SLICE(DPPM."TS", 1, 'MINUTE')::TIMESTAMP_NTZ
    ;

SELECT * FROM TAXI_FORECAST_DRIVERPAY_MULTISLICE WHERE "TIMESLOT" BETWEEN '2022-06-20 00:00:00.000' AND '2022-07-10 00:00:00.000' ORDER BY 1 ASC;
SELECT * FROM TAXI_FORECAST_DRIVERPAY_MINUTE WHERE "TIMESLOT" BETWEEN '2022-06-29 00:00:00.000' AND '2022-07-02 00:00:00.000' ORDER BY 1 ASC;
